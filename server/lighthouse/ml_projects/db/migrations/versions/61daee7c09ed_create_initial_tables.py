"""create initial tables

Revision ID: 61daee7c09ed
Revises: 
Create Date: 2022-06-09 04:12:34.233086

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '61daee7c09ed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'user', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('classification', 'regression', name='projecttype'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cleaned_dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raw_dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('creation_method', sa.Enum('upload', 'capture', name='rawdatasetcreationmethod'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cleaned_dataset_source',
    sa.Column('cleaned_dataset_id', sa.Integer(), nullable=False),
    sa.Column('raw_dataset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cleaned_dataset_id'], ['cleaned_dataset.id'], ),
    sa.ForeignKeyConstraint(['raw_dataset_id'], ['raw_dataset.id'], ),
    sa.PrimaryKeyConstraint('cleaned_dataset_id', 'raw_dataset_id')
    )
    op.create_table('model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['cleaned_dataset.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deployment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('primary_model_id', sa.Integer(), nullable=False),
    sa.Column('secondary_model_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_running', sa.Boolean(), nullable=False),
    sa.Column('deployment_type', sa.Enum('champion_challenger', 'single_model', 'fallback', name='deploymenttype'), nullable=False),
    sa.ForeignKeyConstraint(['primary_model_id'], ['model.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['secondary_model_id'], ['model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('deployment')
    op.drop_table('model')
    op.drop_table('cleaned_dataset_source')
    op.drop_table('raw_dataset')
    op.drop_table('cleaned_dataset')
    op.drop_table('project')
    op.drop_table('user')
    
    project_type = postgresql.ENUM('classification', 'regression', name='projecttype')
    project_type.drop(op.get_bind())
    
    user_role = postgresql.ENUM('admin', 'user', name='userrole')
    user_role.drop(op.get_bind())
    
    deployment_type = postgresql.ENUM('champion_challenger', 'single_model', 'fallback', name='deploymenttype')
    deployment_type.drop(op.get_bind())
    
    raw_dataset_creation_method = postgresql.ENUM('upload', 'capture', name='rawdatasetcreationmethod')
    raw_dataset_creation_method.drop(op.get_bind())
    # ### end Alembic commands ###
